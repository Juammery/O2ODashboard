<?php

/**
 * Controller is the customized base controller class.
 * All controller classes for this application should extend from this base class.
 */
class Controller extends SBaseController
{
    /**
     * @var string the default layout for the controller view. Defaults to '//layouts/column1',
     * meaning using a single column layout. See 'protected/views/layouts/column1.php'.
     */
    //public $layout='//layouts/column1';
    /**
     * @var array context menu items. This property will be assigned to {@link CMenu::items}.
     */
    public $menu = array();

    public function beforeAction($action)
    {
        Yii::app()->language = isset(Yii::app()->session['language']) ? Yii::app()->session['language'] : 'zh_cn';
        return parent::beforeAction($action); // TODO: Change the autogenerated stub
    }

    /**
     * @var array the breadcrumbs of the current page. The value of this property will
     * be assigned to {@link CBreadcrumbs::links}. Please refer to {@link CBreadcrumbs::links}
     * for more details on how to specify this property.
     */
    public $breadcrumbs = array();

    function pd($pm1, $pm2 = 'aaaaa2', $pm3 = 'bbbbb3', $pm4 = 'ccccc4', $pm5 = 'ddddd5')
    {
        header("Content-type: text/html; charset=utf-8");

        echo '<div style="color: red">-----------------参数1打印--------------------</div>';
        echo '<hr>';
        echo '<pre>';
        print_r($pm1);
        echo '</pre>';
        if ($pm2 != 'aaaaa2') {
            echo '<hr>';
            echo '<div style="color: red">-----------------参数2打印--------------------</div>';
            echo '<hr>';
            echo '<pre>';
            print_r($pm2);
            echo '</pre>';
        }
        if ($pm3 != 'bbbbb3') {
            echo '<hr>';
            echo '<div style="color: red">-----------------参数3打印--------------------</div>';
            echo '<hr>';
            echo '<pre>';
            print_r($pm3);
            echo '</pre>';
        }
        if ($pm4 != 'ccccc4') {
            echo '<hr>';
            echo '<div style="color: red">-----------------参数4打印--------------------</div>';
            echo '<hr>';
            echo '<pre>';
            print_r($pm4);
            echo '</pre>';
        }
        if ($pm5 != 'ddddd5') {
            echo '<hr>';
            echo '<div style="color: red">-----------------参数5打印--------------------</div>';
            echo '<hr>';
            echo '<pre>';
            print_r($pm5);
            echo '</pre>';
        }
        die;
    }

    function GetLastMonth($date = '', $pos = false)
    {
        //得到系统的年月
        if (empty($date)) {
            $date = date("Ym");
        }
        $date = str_replace('-', '', $date);
        //切割出年份
        $tmp_year = substr($date, 0, 4);
        //切割出月份
        $tmp_mon = substr($date, 4, 2);
        $tmp_forwardmonth = mktime(0, 0, 0, $tmp_mon - 1, 1, $tmp_year);

        //得到当前月的上一个月
        //return $fm_forward_month=date("Ym",$tmp_forwardmonth);
        if ($pos) {
            return array('year' => date('Y', $tmp_forwardmonth), 'month' => date('m', $tmp_forwardmonth));
        } else {
            return date('Y-m', $tmp_forwardmonth);
        }


    }

    public function returnjson($params)
    {
        header("Content-type: application/json; charset=utf-8");
        return json_encode($params);
    }

    public function makeDir($url)
    {
        if (!is_dir($url)) {   //is_dir 如果文件名存在并且为目录，则返回 true
            if (@mkdir($url, 0777, true)) {    //@mkdir函数创建目录。
                return true;
            } else {
                return false;
            }

        } else {
            return true;
        }
    }

    function hint($type, $msg)
    {
        Yii::app()->user->setflash('hint', array('message' => $msg, 'type' => $type));
    }

    function trimall($str)//删除空格
    {
        $qian = array(" ", "　", "\t", "\n", "\r");
        $hou = array("", "", "", "", "");
        return str_replace($qian, $hou, trim($str));
    }
    public  function postCurl($data, $url,$second = 30)
    {

        $ch = curl_init();
        curl_setopt($ch, CURLOPT_URL, $url);
        curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
//设置为POST
        curl_setopt($ch, CURLOPT_POST, 1);
//把POST的变量加上
        curl_setopt($ch, CURLOPT_POSTFIELDS, $data);


        curl_setopt($ch, CURLOPT_HEADER, false);    //表示需要response header
        curl_setopt($ch, CURLOPT_NOBODY, FALSE); //表示需要response body
        $output = curl_exec($ch);
        curl_close($ch);

        return json_decode($output,true);
    }
    public function getCurl($data, $url,$header=false,$second = 30){


       /* $crl = curl_init($url);
        $headr = array();*/


        if(!empty($data)){
            $url.='?'.http_build_query($data);
        }



       // pd($url);
        $ch = curl_init();
        curl_setopt($ch, CURLOPT_URL, $url);//抓取指定网页
        curl_setopt($ch, CURLOPT_HEADER, 0);//设置是否返回response header
        curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);//要求结果为字符串且输出到屏幕上

        //当需要通过curl_getinfo来获取发出请求的header信息时，该选项需要设置为true
       // curl_setopt($ch, CURLINFO_HEADER_OUT, true);

        curl_setopt($ch, CURLOPT_TIMEOUT, 30);
        //curl_setopt($ch, CURLOPT_CONNECTTIMEOUT, $time_out);
        //curl_setopt($ch, CURLOPT_POST, $is_post);



        if ($header) {
            curl_setopt($ch, CURLOPT_HTTPHEADER, $header);
        }

        $response = curl_exec($ch);

        //$request_header = curl_getinfo( $ch, CURLINFO_HEADER_OUT);
       // print_r($request_header);



        curl_close($ch);

        return json_decode($response,true);
    }
    public function getExcel($fileName,$headArr,$data){

        /* $this->load->library('PHPExcel');
         $this->load->library('PHPExcel/IOFactory');*/
        Yii::import('application.extensions.PHPExcel.PHPExcel') ;
        Yii::import('application.extensions.PHPExcel.PHPExcel.IOFactory') ;

        if(empty($data) || !is_array($data)){
            die("data must be a array");
        }
        if(empty($fileName)){
            exit;
        }
        $fileName .= ".xls";

        //创建新的PHPExcel对象
        $objPHPExcel = new PHPExcel();
        //$objProps = $objPHPExcel->getProperties();

        //设置表头
        $key = ord("A");
        $key1 =ord("A");
        foreach($headArr as $v){
            if($key>=91){
                $colum1 = chr($key1);
                $objPHPExcel->setActiveSheetIndex(0) ->setCellValue('A'.$colum1.'1', $v);
                $key += 1;
                $key1 += 1;
            }else{
                $colum = chr($key);
                $objPHPExcel->setActiveSheetIndex(0) ->setCellValue($colum.'1', $v);
                $key += 1;
            }
        }


        $column = 2;
        $objActSheet = $objPHPExcel->getActiveSheet();
        foreach($data as $key => $rows){ //行写入
            $span = ord("A");
            $span1=ord("A");
            foreach($rows as $keyName=>$value){// 列写入
                if($span>=91){
                    $colum1 = chr($span1);
                    $objPHPExcel->setActiveSheetIndex(0) ->setCellValue('A'.$colum1.$column, $value);
                    $span += 1;
                    $span1+=1;
                }else{
                    $j = chr($span);
                    $objActSheet->setCellValue($j.$column, $value);
                    $span++;
                }
            }
            $column++;
        }
        $fileName = iconv("utf-8", "utf-8", $fileName);
        //重命名表
        $objPHPExcel->getActiveSheet()->setTitle('Simple');
        //设置活动单指数到第一个表,所以Excel打开这是第一个表
        $objPHPExcel->setActiveSheetIndex(0);
        //表格居中
        $objPHPExcel->getActiveSheet()->getStyle('A1:AD1')
            ->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
        //设置表头颜色
//        $objPHPExcel->getActiveSheet()->getStyle('A1:AD1')->getFill()
//            ->setFillType(PHPExcel_Style_Fill::FILL_SOLID)->getStartColor()->setARGB('FF66CCCC');
        //设置宽度
//        $objPHPExcel->setActiveSheetIndex(0);
//        $objPHPExcel->getActiveSheet()->getColumnDimension('B')->setWidth(100);
        //将输出重定向到一个客户端web浏览器(Excel2007)
        header('Content-Type: application/vnd.openxmlformats-officedocument.spreadsheetml.sheet');
        header("Content-Disposition: attachment; filename=\"$fileName\"");
        header('Cache-Control: max-age=0');
        //$objWriter = IOFactory::createWriter($objPHPExcel, 'Excel2007');
        $objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel5');
        $objWriter->save('php://output'); //文件通过浏览器下载
        exit;
    }
}